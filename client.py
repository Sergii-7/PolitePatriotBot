from aiogram import types, Dispatcher
from create_bot import dp, bot
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
import json
import string

b1 = KeyboardButton('/news')
b2 = KeyboardButton('/donation')

kb_client = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
kb_client.add(b1).insert(b2)

@dp.message_handler(commands=['start'])
async def command_start(message: types.Message):
    mess = f'Hello, {message.from_user.first_name} {message.from_user.last_name}!'
    try:
        await bot.send_message(message.from_user.id, mess, reply_markup=kb_client)
        await message.delete()
    except:
        await message.reply('—Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è –∑ –±–æ—Ç–æ–º —á–µ—Ä–µ–∑ –æ—Å–æ–±–∏—Å—Ç–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è,\
        –Ω–∞–ø–∏—à–∏ –π–æ–º—É:\nhttps://t.me/PolitePatriotBot')

@dp.message_handler(commands=['news'])
async def menu_commands(message: types.Message):
    new_en = 'https://t.me/ukraine_now_eng'
    new = 'https://t.me/u_now_ua'
    await bot.send_message(message.from_user.id, new_en)
    await bot.send_message(message.from_user.id, new)

@dp.message_handler(commands=['donation'])
async def menu_commands(message: types.Message):
    help_en = '''The National Bank of Ukraine praised the decision to open a special fundraiser for the collection of coins to support the Healthy Forces of Ukraine.
Requisites of the official special account: UA843000010000000047330992708
Rahunok is multi-currency, it is used for transferring funds to international partners and donors - in foreign currencies (US dollars, euros, British pounds), and in Ukrainian business and citizens - in national currencies.
Support the Ukrainian Army!
Glory to Ukraine! üá∫üá¶'''
    help_ua = '''–ù–∞—Ü—ñ–æ–Ω–∞–ª—å–Ω–∏–π –±–∞–Ω–∫ –£–∫—Ä–∞—ó–Ω–∏ —É—Ö–≤–∞–ª–∏–≤ —Ä—ñ—à–µ–Ω–Ω—è –≤—ñ–¥–∫—Ä–∏—Ç–∏ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–∏–π —Ä–∞—Ö—É–Ω–æ–∫ –¥–ª—è –∑–±–æ—Ä—É –∫–æ—à—Ç—ñ–≤ –Ω–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫—É –ó–±—Ä–æ–π–Ω–∏—Ö –°–∏–ª –£–∫—Ä–∞—ó–Ω–∏.
–†–µ–∫–≤—ñ–∑–∏—Ç–∏ –æ—Ñ—ñ—Ü—ñ–π–Ω–æ–≥–æ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–æ–≥–æ —Ä–∞—Ö—É–Ω–∫—É: UA843000010000000047330992708
–†–∞—Ö—É–Ω–æ–∫ ‚Äì –º—É–ª—å—Ç–∏–≤–∞–ª—é—Ç–Ω–∏–π, –≤—ñ–Ω —Å—Ç–≤–æ—Ä–µ–Ω–∏–π —Ç–∞ –≤—ñ–¥–∫—Ä–∏—Ç–∏–π —è–∫ –¥–ª—è –ø–µ—Ä–µ–∫–∞–∑—É –∫–æ—à—Ç—ñ–≤ –≤—ñ–¥ –º—ñ–∂–Ω–∞—Ä–æ–¥–Ω–∏—Ö –ø–∞—Ä—Ç–Ω–µ—Ä—ñ–≤ —Ç–∞ –¥–æ–Ω–æ—Ä—ñ–≤ ‚Äì —É —ñ–Ω–æ–∑–µ–º–Ω—ñ–π –≤–∞–ª—é—Ç—ñ (–¥–æ–ª–∞—Ä–∏ –°–®–ê, —î–≤—Ä–æ, –±—Ä–∏—Ç–∞–Ω—Å—å–∫—ñ —Ñ—É–Ω—Ç–∏), —Ç–∞–∫ —ñ –≤—ñ–¥ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ–≥–æ –±—ñ–∑–Ω–µ—Å—É —Ç–∞ –≥—Ä–æ–º–∞–¥—è–Ω ‚Äì —É –Ω–∞—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ–π –≤–∞–ª—é—Ç—ñ.
–ü—ñ–¥—Ç—Ä–∏–º—É—î–º–æ –£–∫—Ä–∞—ó–Ω—Å—å–∫—É –ê—Ä–º—ñ—é! 
–°–ª–∞–≤–∞ –£–∫—Ä–∞—ó–Ω—ñ! üá∫üá¶'''
    await bot.send_message(message.from_user.id, help_en)
    await bot.send_message(message.from_user.id, help_ua)

def register_handlers_client(dp: Dispatcher):
    dp.register_message_handler(command_start, commands=['start'])
    dp.register_message_handler(menu_commands, commands=['news'])
    dp.register_message_handler(menu_commands, commands=['donation'])


@dp.message_handler()
async def echo_send(message: types.Message):
    if {i.lower().translate(str.maketrans('','',string.punctuation)) for i in message.text.split(' ')}\
            .intersection(set(json.load(open('censorship.json')))) != set():
        await message.reply('–ú–∞—Ç—é–∫–∏ –≤ —á–∞—Ç—ñ –∑–∞–±–æ—Ä–æ–Ω–µ–Ω—ñ!')
        await message.delete()
    elif {i.lower().translate(str.maketrans('','',string.punctuation)) for i in message.text.split(' ')}\
            .intersection(set(json.load(open('cens_english.json')))) != set():
        await message.reply('Profanity is prohibited in the chat!')
        await message.delete()
    elif message.text.lower() == 'ukr':
        await message.answer('üá∫üá¶ –ø–æ–Ω–∞–¥ —É—Å–µ!')
    elif message.text.lower()[0:13] == '—Å–ª–∞–≤–∞ —É–∫—Ä–∞—ó–Ω—ñ' or message.text.lower()[0:13] == '—Å–ª–∞–≤–∞ —É–∫—Ä–∞–∏–Ω–µ':
        await message.answer('–ì–µ—Ä–æ—è–º –°–ª–∞–≤–∞!')
    elif message.text.lower()[0:8] == '—Å–ª–∞–≤–∞ üá∫üá¶':
        await message.answer('–ì–µ—Ä–æ—è–º –°–ª–∞–≤–∞!')
    elif message.text.lower()[0:11] == '—Å–ª–∞–≤–∞ –Ω–∞—Ü—ñ—ó':
        await message.answer('–°–º–µ—Ä—å –≤–æ—Ä–æ–≥–∞–º!')
    elif message.text.lower()[0:13] == '—Ä—É—Å—å–∫–∏–π –∫–æ—Ä–∞–±' or message.text.lower()[0:12] =='—Ä—É—Å–∫–∏–π –∫–æ—Ä–∞–±' \
            or message.text.lower()[0:13] == '—Ä—É—Åc–∫–∏–π –∫–æ—Ä–∞–±':
        await message.answer('–Ü–¥–∏ –≥–µ—Ç—å!')

    for n in message.text.split(' '):
        if n.lower()[0:6] == '–ø—Ä–∏–≤—ñ—Ç' or n.lower() == '–ø—Ä–∏–≤–µ—Ç':
            await message.reply('Hello!')
            break
        elif n.lower()[0:7] == '–¥–æ–±—Ä–æ–≥–æ':
            await message.reply('Hello!')
            break
        elif n.lower()[0:5] == 'hello':
            await message.reply('Hello!')
            break
        elif n.lower() == 'hi' or n.lower() == 'hi!' or n.lower() == 'hi)' \
                or n.lower() == 'hi:)':
            await message.reply('Hello!')
            break
        elif n.lower() == 'üá∫üá¶' or n.lower()[0:7] == 'ukraine' or n.lower()[0:7] == '—É–∫—Ä–∞–∏–Ω–∞'\
                or n.lower()[0:7] == '—É–∫—Ä–∞—ó–Ω–∞':
            await message.answer('üá∫üá¶ –ø–æ–Ω–∞–¥ —É—Å–µ!')
            break

        elif n == '—Ä–æ—Å—Å–∏—è' or n == '—Ä–æ—Å–∏—è'  or n == '—Ä–æ—Å—ñ—è' or n == '—Ä–∞—Å—ñ—è' or n == '—Ä–æ—Å—î—è' or n == '—Ä–∞—Å—î—è':
            await message.reply('–¢–∞–∫ –≤—ñ—Ä–Ω–æ! –¶—è –∫—Ä–∞—ó–Ω–∞ –ø–∏—à–µ—Ç—å—Å—è –∑ –º–∞–ª–µ–Ω—å–∫–æ—ó –ª—ñ—Ç–µ—Ä–∏')
            break
        elif n == '–†–æ—Å—Å–∏—è' or n == '–†–∞—Å—Å–∏—è':
            await message.reply('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞ –Ω–∞–∑–≤–∞! –¢—Ä–µ–±–∞ —Ä–∞—Å—î—è —á–∏ —Ä–∞—à–∫–∞ —á–∏ –ª–∞–ø—Ç—ñ—Å—Ç–∞–Ω')
            break
        elif n.lower() == '–±—Ä–∞—Ç—å—è':
            await message.reply('https://www.youtube.com/watch?v=QJvOlSXBHVs')
            break
        elif n.lower() == '–ø—É—Ç–∏–Ω' or n.lower() == '–ø—É—Ç—ñ–Ω' or n.lower() == '–ø—É—Ç–ª–µ—Ä':
            await message.reply('–ø—É—Ç—ñ–Ω - –•—É*–ª–æ!')
            break
        for i in n:
            rus = ['—ã', '—ë', '—ä', '—ç']
            if i.lower() in rus:
                await message.reply('–í–∏–±–∞—á—Ç–µ, –∞–ª–µ —è —Ü—é –º–æ–≤—É –Ω–µ —Ä–æ–∑—É–º—ñ—é!')
        break

def register_handlers_other(dp: Dispatcher):
    dp.register_message_handler(echo_send)
